import { addEnum } from "../typeSetup";
import { boolType } from "./bool";

export const charType = addEnum(
    "Char",
    "Type denoting a single character",
    [
        'char_null', 'char_soh', 'char_stx', 'char_etx',
        'char_eot', 'char_enq', 'char_ack', 'char_bel',
        'char_bs', 'char_ht', 'char_lf', 'char_vt',
        'char_ff', 'char_cr', 'char_so', 'char_si',
        'char_dle', 'char_dc1', 'char_dc2', 'char_dc3',
        'char_dc4', 'char_nak', 'char_syn', 'char_etb',
        'char_can', 'char_em', 'char_sub', 'char_esc',
        'char_fs', 'char_gs', 'char_rs', 'char_us',
        'char_space', 'char_excl', 'char_quote', 'char_num',
        'char_dollar', 'char_percent', 'char_amp', 'char_apos',
        'char_lparen', 'char_rparen', 'char_ast', 'char_plus',
        'char_comma', 'char_minus', 'char_dot', 'char_sol',
        'char_0', 'char_1', 'char_2', 'char_3',
        'char_4', 'char_5', 'char_6', 'char_7',
        'char_8', 'char_9', 'char_color', 'char_semi',
        'char_lt', 'char_equals', 'char_gt', 'char_quest',
        'char_at', 'char_A', 'char_B', 'char_C',
        'char_D', 'char_E', 'char_F', 'char_G',
        'char_H', 'char_I', 'char_J', 'char_K',
        'char_L', 'char_M', 'char_N', 'char_O',
        'char_P', 'char_Q', 'char_R', 'char_S',
        'char_T', 'char_U', 'char_V', 'char_W',
        'char_X', 'char_Y', 'char_Z', 'char_lsqb',
        'char_bsol', 'char_rsqb', 'char_hat', 'char_lowbar',
        'char_grave', 'char_a', 'char_b', 'char_c',
        'char_d', 'char_e', 'char_f', 'char_g',
        'char_h', 'char_i', 'char_j', 'char_k',
        'char_l', 'char_m', 'char_n', 'char_o',
        'char_p', 'char_q', 'char_r', 'char_s',
        'char_t', 'char_u', 'char_v', 'char_w',
        'char_x', 'char_y', 'char_z', 'char_lcub',
        'char_verbar', 'char_rcub', 'char_tilde', 'char_del',
        'char_128', 'char_128', 'char_129', 'char_130',
        'char_131', 'char_132', 'char_133', 'char_134',
        'char_135', 'char_136', 'char_137', 'char_138',
        'char_139', 'char_140', 'char_141', 'char_142',
        'char_143', 'char_144', 'char_145', 'char_146',
        'char_147', 'char_148', 'char_149', 'char_150',
        'char_151', 'char_152', 'char_153', 'char_154',
        'char_155', 'char_156', 'char_157', 'char_158',
        'char_159', 'char_160', 'char_161', 'char_162',
        'char_163', 'char_164', 'char_165', 'char_166',
        'char_167', 'char_168', 'char_169', 'char_170',
        'char_171', 'char_172', 'char_173', 'char_174',
        'char_175', 'char_176', 'char_177', 'char_178',
        'char_179', 'char_180', 'char_181', 'char_182',
        'char_183', 'char_184', 'char_185', 'char_186',
        'char_187', 'char_188', 'char_189', 'char_190',
        'char_191', 'char_192', 'char_193', 'char_194',
        'char_195', 'char_196', 'char_197', 'char_198',
        'char_199', 'char_200', 'char_201', 'char_202',
        'char_203', 'char_204', 'char_205', 'char_206',
        'char_207', 'char_208', 'char_209', 'char_210',
        'char_211', 'char_212', 'char_213', 'char_214',
        'char_215', 'char_216', 'char_217', 'char_218',
        'char_219', 'char_220', 'char_221', 'char_222',
        'char_223', 'char_224', 'char_225', 'char_226',
        'char_227', 'char_228', 'char_229', 'char_230',
        'char_231', 'char_232', 'char_233', 'char_234',
        'char_235', 'char_236', 'char_237', 'char_238',
        'char_239', 'char_240', 'char_241', 'char_242',
        'char_243', 'char_244', 'char_245', 'char_246',
        'char_247', 'char_248', 'char_249', 'char_250',
        'char_251', 'char_252', 'char_253', 'char_254',
        'char_255'
    ],
    boolType
);